<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onlineanswer.hc.answer.dao.StudentsAnswerDao">
    <select id="getStudentsAnswerList" parameterType="map"
            resultType="com.onlineanswer.hc.answer.entity.Studentsanswer">

        SELECT
        s.id,
        s.examtypeid,
        s.studentid,
        s.grade,
        s.createtime,
        e.name as examinfoname
        from
        studentsanswer s INNER JOIN examtype e on s.examtypeid=e.id
        where 1=1
        <if test="examtypeid != null and examtypeid != '' and examtypeid != -1">
            AND s.examtypeid = #{examtypeid}
        </if>
        <if test="studentid != null and studentid != ''">
            AND s.studentid = #{studentid}
        </if>
        order by createtime desc
    </select>
      <!--计算最后一次考试成绩-->
    <!--SELECT-->
    <!--et.id,-->
    <!--et.name as examinfoname,-->
    <!--(select examtypeid from studentsanswer where studentid=#{studentid} and examtypeid=et.id ORDER BY createtime desc LIMIT 0,1)as examtypeid,-->
    <!--(select studentid from studentsanswer where studentid=#{studentid} and examtypeid=et.id  ORDER BY createtime desc LIMIT 0,1)as studentid,-->
    <!--(SELECT IFNULL((select grade from studentsanswer where studentid=#{studentid} and examtypeid=et.id  ORDER BY createtime desc LIMIT 0,1),0)) as grade,-->
    <!--(select createtime from studentsanswer where studentid=#{studentid} and examtypeid=et.id  ORDER BY createtime desc LIMIT 0,1)as createtime-->
    <!--from-->
    <!--examtype et-->
    <!--计算平均成绩-->
    <select id="getStatisticsEchart" parameterType="map"
            resultType="com.onlineanswer.hc.answer.entity.Studentsanswer">

        SELECT
            et.id,
            et.name as examinfoname,
            (select examtypeid from studentsanswer  where studentid=#{studentid} GROUP BY examtypeid HAVING examtypeid=et.id)as examtypeid,
            (select studentid from studentsanswer  where studentid=#{studentid} GROUP BY examtypeid HAVING examtypeid=et.id)as studentid,
            (SELECT IFNULL((select avg(grade) from studentsanswer  where studentid=#{studentid} GROUP BY examtypeid HAVING examtypeid=et.id),0)) as grade,
            (select now() )as createtime
        from
         examtype et
    </select>

</mapper>